@model BaseballStat.Web.ViewModels.Player.PlayerListViewModel
@{
    this.ViewData["Title"] = "Players";
}

<div class="col-lg-12">
    <h2>Players</h2>
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Position</th>
                <th>Bats</th>
                <th>Throws</th>
                <th>YearOfBirth</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in Model.Players)
            {
                    <tr>
                        <td>@player.FirstName</td>
                        <td>@player.LastName</td>
                        <td>@player.Position</td>
                        <td>@player.Bats</td>
                        <td>@player.Throws</td>
                        <td>@player.YearOfBirth</td>
                        <td><img src="@player.ImageUrl" alt="Player Image" width="100" height="100" /></td>
                        <td>
                            <form method="post" asp-action="AddPlayer" asp-controller="Player" asp-area="Administration">
                                <input type="hidden" name="id" value="@player.Id" />
                                <button type="submit" class="btn btn-success">Add</button>
                            </form>
                            <form method="post" asp-action="DeletePlayer" asp-controller="Player" asp-area="Administration">
                                <input type="hidden" name="id" value="@player.Id" />
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
            }
        </tbody>
    </table>
</div>
<hr />
<nav>
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>
