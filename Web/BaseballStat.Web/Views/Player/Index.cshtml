@model BaseballStat.Web.ViewModels.Player.PlayerListViewModel

@{
    this.ViewData["Title"] = "Players of BaseballStat";
}

<div class="container">
    <div class="row justify-content-center">
        <!-- Player Posts -->
        @foreach (var player in Model.Players)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4 d-flex align-items-stretch">
                <div class="card w-100">
                    <img src="@player.ImageUrl" class="card-img-top" alt="@player.FirstName @player.LastName">
                    <div class="card-body">
                        <h2 class="card-title text-center">@player.FirstName @player.LastName</h2>
                        <p class="card-text"><b>Position:</b> @player.Position</p>
                        <p class="card-text"><b>Bats:</b> @player.Bats</p>
                        <p class="card-text"><b>Throws:</b> @player.Throws</p>
                        <p class="card-text"><b>Year of Birth:</b> @player.YearOfBirth</p>
                        <div class="text-center">
                            <div class="row">
                                <div class="col">
                                    <div class="button button-large button_1 elements_button mt-4">
                                        <a asp-area="" asp-controller="PlayerStatistic" asp-action="Index" asp-route-id="@player.Id">
                                            <label for="submit" class="btn btn-primary">PlayerStatistic</label>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
    }
<hr />
<nav>
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>

